generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @updatedAt
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  company       String?
  firstname     String?
  lastname      String?
  password      String?
  username      String?   @unique
  role          String    @default("user")
  orders        orders[]
  posts         posts[]
}

model orders {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  orderNumber Int        @default(autoincrement())
  userId      String?
  user        users?     @relation(fields: [userId], references: [id])
  cartItems   products[] @relation("OrderToProduct")
}

model products {
  id                String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title             String      @unique
  slug              String      @unique
  description       String?     @db.VarChar(10000000)
  short_description String?     @db.VarChar(10000000)
  price             Float
  quantity          Int
  image             String
  specifications    String?     @db.VarChar(10000000)
  visible           Boolean     @default(true)
  available         Boolean     @default(true)
  sale_price        Float?
  weight            Float       @default(1)
  averageRating     Float?
  createdAt         DateTime    @default(now())
  categoryId        String?
  category          categories? @relation(fields: [categoryId], references: [id])
  inOrders          orders[]    @relation("OrderToProduct")
  downloads         downloads[]
}

model categories {
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  name        String     @unique
  slug        String     @unique
  description String?
  createdAt   DateTime   @default(now())
  products    products[]
}

model posts {
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  title     String
  content   String?
  published Boolean   @default(false)
  authorId  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  author    users?    @relation(fields: [authorId], references: [id])
}

model downloads {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String
  url         String?
  description String?
  products    products[]
}
